<script src="https://code.jquery.com/jquery-3.x.min.js"></script>

<!-- Adicione a biblioteca Moment.js -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

<!-- Adicione a biblioteca Bootstrap-datepicker JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>

<!-- Adicione a biblioteca Eonasdan-bootstrap-datetimepicker JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/eonasdan-bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>

<!-- Adicione a localização pt-BR para o datepicker -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/locales/bootstrap-datepicker.pt-BR.min.js"></script>

<!-- Adicione a localização pt-BR para o datetimepicker -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/locale/pt-br.js"></script>

@model IEnumerable<Domain.DTOs.AgendamentosDTO.AgendamentoFuncionProcedimentosDTO>

@{
    var pageSize = 4; // Número de itens por página
    int pageNumber;
    int.TryParse(Context.Request.Query["page"], out pageNumber);
    pageNumber = pageNumber <= 0 ? 1 : pageNumber;
}

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @foreach (var modelError in ViewData.ModelState.SelectMany(kvp => kvp.Value.Errors))
        {
            <p>@modelError.ErrorMessage</p>
        }
    </div>
}

<div class="container">
    <h2 class="mt-4 mb-4">
        Lista de Agendamentos
        <small class="text-muted float-right filter-icon">
            <i class="nav-icon fas fa-calendar-alt"></i> Filtrar por Data
            <div class="input-group" style="margin-left: -1px; width: 100%;">
                <input type="text" class="form-control datetimepicker" id="filtroDataInicio" placeholder="Data Inicial">
                <input type="text" class="form-control datetimepicker" id="filtroDataFim" placeholder="Data Final">
                <div class="input-group-append" style="width: auto;">
                    <button class="btn btn-outline-secondary align-middle" type="button" id="filtrarBtn" style="min-width: 80px;">
                        Filtrar
                    </button>
                </div>
            </div>
        </small>
    </h2>

    <a href="@Url.Action("Create", "Agendamentos")" class="btn btn-success mb-2">Novo Agendamento</a>

    <div class="table-responsive">
        <table class="table table-bordered table-hover">
            <thead class="thead-dark">
                <tr>
                    <th>Procedimento</th>
                    <th>Data e Hora</th>
                    <th>Sessões</th>
                    <th>Observação</th>
                    <th>Paciente</th>
                    <th>Colaborador</th>
                    <th>Realizar</th>
                    <th>Reagendar</th>
                    <th>Cancelar</th>
                    <th>Ações</th> 
                </tr>
            </thead>
            <tbody>
                @foreach (var agendamento in Model)
                {
                    <tr class="data-row">
                        <td>@agendamento.ProcedimentoAgendamento.NomeProcedimento</td>
                        <td>@agendamento.ProcedimentoAgendamento.DataHoraMarcada.ToString("dd/MM/yyyy HH:mm")</td>
                        <td>@agendamento.ProcedimentoAgendamento.Sessoes</td>
                        <td>@agendamento.ProcedimentoAgendamento.Observacao</td>
                        <td>@($"{agendamento.Paciente.Nome} {agendamento.Paciente.SobreNome}")</td>
                        <td>@($"{agendamento.Funcionario.Nome} {agendamento.Funcionario.SobreNome}")</td>
                        <td>
                            @if (agendamento.ProcedimentoAgendamento.Realizado)
                            {
                                <span class="badge bg-success text-center" style="font-size: 90%;">OK</span>
                            }
                            else if (!agendamento.ProcedimentoAgendamento.Realizado && !agendamento.ProcedimentoAgendamento.Cancelado)
                            {
                                <button class="btn btn-warning btn-sm reagendar-btn"
                                        style="background-color: #FF8C00; font-size: 12px; font-weight: bold; color: black;"
                                        data-id="@agendamento.ProcedimentoAgendamento.AgendamentoId"
                                        onclick="confirmarAgendamento('@Url.Action("AtualizarConfirmacao", "Agendamentos", new { id = agendamento.ProcedimentoAgendamento.AgendamentoId })')">
                                    Pendente
                                </button>
                            }
                            else if (agendamento.ProcedimentoAgendamento.Cancelado)
                            {
                                <span class="badge bg-danger">CANCELADO <i class="fa fa-times"></i></span>
                            }
                        </td>

                        <td>
                            <!-- Botão Reagendar -->
                            <button class="btn btn-warning btn-sm reagendar-btn" style="background-color: #FF8C00; font-size: 12px; font-weight: bold; color: black;" data-toggle="modal" data-target="#reagendarModal_@agendamento.ProcedimentoAgendamento.AgendamentoId">Reagendar</button>
                        </td>

                        <td>
                            <!-- Botão Cancelar com alerta de confirmação -->
                            @if (!agendamento.ProcedimentoAgendamento.Cancelado)
                            {
                                <button class="btn btn-danger btn-sm cancelar-btn"
                                        data-id="@agendamento.ProcedimentoAgendamento.AgendamentoId"
                                        onclick="confirmarCancelamento('@Url.Action("AtualizarCancelamento", "Agendamentos", new { id = agendamento.ProcedimentoAgendamento.AgendamentoId })')">
                                    Cancelar
                                </button>
                            }
                        </td>

                        <!-- Modal Reagendar -->
                        <div class="modal fade" id="reagendarModal_@agendamento.ProcedimentoAgendamento.AgendamentoId" tabindex="-1" role="dialog" aria-labelledby="reagendarModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="reagendarModalLabel">Reagendar</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="form-group">
                                            <label for="novaDataHora">Nova Data e Hora:</label>
                                            <input type="text" class="form-control datetimepicker" id="novaDataHora_@agendamento.ProcedimentoAgendamento.AgendamentoId" placeholder="Selecione uma nova data e hora">
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
                                        <button type="button" class="btn btn-primary" data-id="@agendamento.ProcedimentoAgendamento.AgendamentoId"onclick="reagendarAgendamento('@Url.Action("AtualizarAgendamento", "Agendamentos")', @agendamento.ProcedimentoAgendamento.AgendamentoId)">Reagendar</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <td>
                            <button type="button" class="btn btn-info expand-button" data-toggle="collapse" data-target="#details@(agendamento.ProcedimentoAgendamento.ProcedimentoAgendamentoId)">
                                <span class="icon-expand">
                                    <i class="fa fa-caret-down"></i> <!-- Ícone para expandir -->
                                </span>
                            </button>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="10" class="hiddenRow">
                            <div class="accordian-body collapse" id="details@(agendamento.ProcedimentoAgendamento.ProcedimentoAgendamentoId)">
                                <p><strong style="font-size: 18px;">Detalhes do Colaborador:</strong></p>
                                <p>Nome: @agendamento.Funcionario.Nome</p>
                              @*   <p>Sobrenome: @agendamento.Funcionario.SobreNome</p> *@
                                <p>Especialidade: @agendamento.Funcionario.Especialidade</p>
                                <hr style="border-top: 2px solid black; margin: 10px 0;">
                                <p><strong style="font-size: 18px;">Detalhes do Paciente:</strong></p>
                                <p>Nome: @agendamento.Paciente.Nome</p>
                                <p>Sobrenome: @agendamento.Paciente.SobreNome</p>
                                <p>Data de Nascimento: @agendamento.Paciente.DataDeNascimento</p>
                                <p>Gênero: @agendamento.Paciente.Genero</p>
                                <p>CPF: @agendamento.Paciente.CPF</p>
                                <p>Celular: @agendamento.Paciente.Celular</p>
                                <p>Email: @agendamento.Paciente.Email</p>
                                <p>Profissão: @agendamento.Paciente.Profissao</p>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="card-footer clearfix">
        <div class="d-flex justify-content-center mt-3">
            <!-- Paginação simples com links para páginas anteriores e próximas -->
            @if (pageNumber > 1)
            {
                <a href="@Url.Action("Index", new { page = pageNumber - 1 })" class="btn btn-primary">Página Anterior</a>
            }
            @if (Model.Count() > pageNumber * pageSize)
            {
                <a href="@Url.Action("Index", new { page = pageNumber + 1 })" class="btn btn-primary ml-2">Próxima Página</a>
            }
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">Voltar</a>
        </div>
    </div>
    <script>
        $(document).ready(function () {
            // Inicializa o plugin Eonasdan-bootstrap-datetimepicker com localização pt-BR
            $('.datetimepicker').datetimepicker({
                format: 'DD/MM/YYYY HH:mm', // Formato para data e hora
                locale: 'pt-br', // Define a localização para português
                icons: {
                    time: 'far fa-clock',
                    date: 'far fa-calendar-alt',
                    up: 'fas fa-chevron-up',
                    down: 'fas fa-chevron-down',
                    previous: 'fas fa-chevron-left',
                    next: 'fas fa-chevron-right',
                    today: 'fas fa-calendar-check',
                    clear: 'fas fa-trash-alt',
                    close: 'fas fa-times'
                },
                sideBySide: true // Exibe o seletor de data e hora lado a lado
            });


            $('#filtrarBtn').on('click', function () {
                filtrarPorData();
            });

            function filtrarPorData() {
                // Obtemos as datas selecionadas
                var dataInicio = moment($('#filtroDataInicio').val(), 'DD/MM/YYYY').startOf('day');
                var dataFim = moment($('#filtroDataFim').val(), 'DD/MM/YYYY').endOf('day');

                // Exibe ou oculta as linhas da tabela com base no intervalo de datas selecionado
                $('.data-row').each(function () {
                    var rowData = moment($(this).find('td:eq(1)').text(), 'DD/MM/YYYY HH:mm');

                    if (rowData.isBetween(dataInicio, dataFim, null, '[]')) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            }

            // Adiciona o manipulador de evento de expansão/recuo inicial
            $('.expand-button').click(function () {
                var targetId = $(this).data('target');
                $(targetId).collapse('toggle');
            });
        });

        function filtrarPorData() {
            // Obtemos as datas selecionadas
            var dataInicioStr = $('#filtroDataInicio').val();
            var dataFimStr = $('#filtroDataFim').val();

            // Verifica se as datas estão no formato esperado
            if (!isValidDate(dataInicioStr) || !isValidDate(dataFimStr)) {
                alert('Por favor, insira datas válidas no formato DD/MM/YYYY.');
                return;
            }

            // Converte as datas para o formato ISO (YYYY-MM-DD) antes de comparar
            var dataInicio = moment(dataInicioStr, 'DD/MM/YYYY').startOf('day').format('YYYY-MM-DD');
            var dataFim = moment(dataFimStr, 'DD/MM/YYYY').endOf('day').format('YYYY-MM-DD');

            // Exibe ou oculta as linhas da tabela com base no intervalo de datas selecionado
            $('.data-row').each(function () {
                var rowData = moment($(this).find('td:eq(1)').text(), 'DD/MM/YYYY HH:mm').format('YYYY-MM-DD');

                if (moment(rowData).isBetween(dataInicio, dataFim, null, '[]')) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        }

        // Função auxiliar para verificar se uma data é válida
        function isValidDate(dateString) {
            var regex = /^\d{2}\/\d{2}\/\d{4}$/;
            return dateString.match(regex) !== null;
        }

        function confirmarAgendamento(redirectUrl) {
            if (confirm('Tem certeza que deseja confirmar esse agendamento?')) {
                // Redirecione para a URL especificada
                window.location.href = redirectUrl;
            }
        }

        function confirmarCancelamento(redirectUrl) {
            if (confirm('Tem certeza que deseja cancelar esse agendamento?')) {
                // Redirecione para a URL especificada
                window.location.href = redirectUrl;
            }
        }

        function reagendarAgendamento(redirectUrl, agendamentoId) {
        // Obtenha a nova data e hora da modal
            var novaDataHora = $('#novaDataHora_' + agendamentoId).val();

        // Faça uma chamada AJAX para o endpoint AtualizarAgendamento
        $.ajax({
                url: redirectUrl + '/' + agendamentoId,
            type: 'POST',
            data: { dataHoraMarca: novaDataHora },
            success: function (result) {
                // Redirecione ou atualize a página conforme necessário
                    window.location.href = redirectUrl;
            },
            error: function (error) {
                // Lide com erros, se necessário
                console.error('Erro ao reagendar:', error);
            }
        });
    }

    </script>

</div>
